# .github/workflows/train_ml_models.yml
name: Train ML Models (CFB)

on:
  workflow_dispatch:        # allow manual trigger
  schedule:                 # automatic weekly run (after regression)
    - cron: "15 17 * * 2"   # 17:15 UTC = 12:15 PM US/Eastern (Tuesdays)

permissions:
  contents: write

# Prevent overlapping runs of this workflow
concurrency:
  group: train-ml-models
  cancel-in-progress: false

jobs:
  train-ml:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      TARGET_COL: "points_scored"     # use the target already in modeling_dataset.csv
      EXCLUDE_TARGET_REGEX: "(?i)^(?!points_scored$).*(points?|scores?|margin|spread)$"
      DATASET_CSV: "data/modeling_dataset.csv"   # if your script reads this env; otherwise it defaults to this path

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy pandas scikit-learn joblib xgboost lightgbm

      # We DO NOT fetch/clean scores here. We rely on the unified dataset produced earlier.
      - name: Verify modeling dataset and target
        run: |
          set -e
          if [ ! -f "$DATASET_CSV" ]; then
            echo "ERROR: $DATASET_CSV not found. Run 'Build Modeling Dataset' first."
            exit 2
          fi
          echo "==> $DATASET_CSV (head)"
          head -n 10 "$DATASET_CSV" || true
          echo "==> Row count:"
          wc -l "$DATASET_CSV" || true
          # ensure target col exists in header
          header=$(head -n 1 "$DATASET_CSV")
          echo "$header" | grep -qi ",$TARGET_COL," || echo "$header" | grep -qi "^$TARGET_COL," || echo "$header" | grep -qi ",$TARGET_COL$"
          if [ $? -ne 0 ]; then
            echo "ERROR: TARGET_COL '$TARGET_COL' not found in $DATASET_CSV header."
            exit 3
          fi

      - name: Train ML models (XGBoost / LightGBM)
        run: |
          set -e
          echo "==> Training ML models with TARGET_COL=$TARGET_COL using $DATASET_CSV"
          python scripts/train_ml_models.py

          echo '--- logs_ml_models.txt (tail) ---'
          if [ -f logs_ml_models.txt ]; then
            tail -n 200 logs_ml_models.txt
          else
            echo "logs_ml_models.txt not found."
          fi

          echo '--- data/ml_model_metrics.csv ---'
          if [ -f data/ml_model_metrics.csv ]; then
            cat data/ml_model_metrics.csv
          else
            echo "data/ml_model_metrics.csv not found."
          fi

          echo '--- data/ml_feature_importance.csv (head) ---'
          if [ -f data/ml_feature_importance.csv ]; then
            head -n 40 data/ml_feature_importance.csv
          else
            echo "data/ml_feature_importance.csv not found."
          fi

          echo '--- model artifacts ---'
          if [ -d models ]; then
            ls -lh models || true
          else
            echo "models/ directory not found."
          fi

      - name: Commit and push artifacts
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          # Stage individually to avoid fragile continuations
          [ -f logs_ml_models.txt ] && git add -f logs_ml_models.txt || true
          [ -f data/ml_model_metrics.csv ] && git add -f data/ml_model_metrics.csv || true
          [ -f data/ml_feature_importance.csv ] && git add -f data/ml_feature_importance.csv || true
          git add -f models/xgb_model.pkl 2>/dev/null || true
          git add -f models/lgbm_model.pkl 2>/dev/null || true

          if git diff --cached --quiet; then
            echo "No changes to commit (artifacts unchanged)."
          else
            git commit -m "Add ML model metrics, importances, and artifacts [skip ci]"
            git push
          fi
