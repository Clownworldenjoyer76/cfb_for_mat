name: Train ML Models (CFB)

on:
  workflow_dispatch:        # manual trigger
  # schedule:               # optional
  #   - cron: "15 17 * * 2"  # Tuesdays 17:15 UTC

permissions:
  contents: write

jobs:
  train-ml:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas scikit-learn joblib requests xgboost lightgbm

      - name: Fetch per-game scores (CFBD /games, per week)
        env:
          CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}
        run: |
          set -e
          echo "==> Fetching game scores from CFBD (per week)â€¦"
          python scripts/fetch_game_scores_cfbd.py
          echo "==> Preview: data/game_scores.csv"
          head -n 20 data/game_scores.csv || true
          echo "==> Row count (raw):"
          wc -l data/game_scores.csv || true

      - name: Clean scores to unique (game_id, team)
        run: |
          set -e
          python scripts/clean_scores_unique_by_id.py
          echo "==> Preview: data/game_scores_clean.csv"
          head -n 20 data/game_scores_clean.csv || true
          echo "==> Row count (clean):"
          wc -l data/game_scores_clean.csv || true

      - name: Train ML models (XGBoost / LightGBM)
        env:
          TARGET_COL: points_scored
          EXCLUDE_TARGET_REGEX: '(?i)^(?!points_scored$).*(points?|scores?|margin|spread)$'
          SCORES_CSV: data/game_scores_clean.csv
        run: |
          set -e
          echo "==> Training ML models with TARGET_COL=${TARGET_COL}"
          python scripts/train_ml_models.py

          echo '--- logs_ml_models.txt (tail) ---'
          if [ -f logs_ml_models.txt ]; then
            tail -n 200 logs_ml_models.txt
          else
            echo "logs_ml_models.txt not found."
          fi

          echo '--- data/ml_model_metrics.csv ---'
          if [ -f data/ml_model_metrics.csv ]; then
            cat data/ml_model_metrics.csv
          else
            echo "data/ml_model_metrics.csv not found."
          fi

          echo '--- data/ml_feature_importance.csv (head) ---'
          if [ -f data/ml_feature_importance.csv ]; then
            head -n 40 data/ml_feature_importance.csv
          else
            echo "data/ml_feature_importance.csv not found."
          fi

          echo '--- model artifacts ---'
          if [ -d models ]; then
            ls -lh models || true
          else
            echo "models/ directory not found."
          fi

      - name: Commit and push artifacts
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage individually to avoid fragile continuations
          [ -f logs_ml_models.txt ] && git add -f logs_ml_models.txt || true
          [ -f data/ml_model_metrics.csv ] && git add -f data/ml_model_metrics.csv || true
          [ -f data/ml_feature_importance.csv ] && git add -f data/ml_feature_importance.csv || true
          git add -f models/xgb_model.pkl 2>/dev/null || true
          git add -f models/lgbm_model.pkl 2>/dev/null || true

          if git diff --cached --quiet; then
            echo "No changes to commit (artifacts unchanged)."
          else
            git commit -m "Add ML model metrics, importances, and artifacts [skip ci]"
            git push
          fi
