# .github/workflows/build_modeling_dataset.yml
name: Build Modeling Dataset

on:
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: build-modeling-dataset-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sync to remote main (before generating artifacts)
        run: |
          set -e
          git fetch origin main
          git reset --hard origin/main
          git status --porcelain

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          python -m pip install pandas

      - name: Build modeling dataset
        env:
          SEASON_MIN: "2019"
          SEASON_MAX: "2025"
        run: |
          set -e
          python scripts/build_modeling_dataset.py
          echo "--- data/modeling_dataset.csv (head) ---"; head -n 10 data/modeling_dataset.csv || true
          echo "--- logs_build_modeling_dataset.txt ---"; cat logs_build_modeling_dataset.txt || true
          echo "--- counts ---"
          [ -f data/modeling_dataset.csv ] && wc -l data/modeling_dataset.csv || echo "data/modeling_dataset.csv missing"
          [ -f logs_build_modeling_dataset.txt ] && wc -l logs_build_modeling_dataset.txt || echo "logs_build_modeling_dataset.txt missing"

      # Minimal, robust enrichment: add points_scored from game_scores_clean.csv
      - name: Inject points_scored (if scores available)
        run: |
          set -e
          if [ ! -f data/modeling_dataset.csv ]; then
            echo "ERROR: data/modeling_dataset.csv missing"; exit 2
          fi
          if [ ! -f data/game_scores_clean.csv ]; then
            echo "NOTE: data/game_scores_clean.csv not found; skipping enrichment."; exit 0
          fi
          python - <<'PY'
import pandas as pd

m = pd.read_csv('data/modeling_dataset.csv')
s = pd.read_csv('data/game_scores_clean.csv', usecols=['game_id','team','points_scored','points_allowed'])

if 'game_id' not in m.columns or 'team' not in m.columns:
    raise SystemExit("ERROR: modeling_dataset.csv must have 'game_id' and 'team'.")

# normalize keys
m['game_id'] = m['game_id'].astype(str)
s['game_id'] = s['game_id'].astype(str)
m['__t'] = m['team'].astype(str).str.strip().str.lower()
s['__t'] = s['team'].astype(str).str.strip().str.lower()

# de-dup scores and merge
s_small = s.drop_duplicates(subset=['game_id','__t'])[['game_id','__t','points_scored','points_allowed']]
m = m.merge(s_small, on=['game_id','__t'], how='left')
m.drop(columns='__t', inplace=True)

m.to_csv('data/modeling_dataset.csv', index=False)
print("points_scored non-null:", int(m['points_scored'].notna().sum()))
PY

      - name: Commit and push artifacts
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          git add -f data/modeling_dataset.csv logs_build_modeling_dataset.txt || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
            git status --porcelain
          else
            git commit -m "Build + enrich modeling_dataset (points_scored) [skip ci]"
            git push origin "${GITHUB_REF_NAME:-main}"
          fi
